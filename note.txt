* render component: 
    <componentName />

* transfer data from parent component to child component:
    <Word wordInfo={word} key={word._id}/>

    const { en, vn, isMemoried } = this.props.wordInfo;

* state: 
    constructor(props) {
        super(props);
        this.state = { count: 1 } // variable count
    }

* onclick and set state
    <button 
        className="btn btn-success"
        onClick = {() => {
            this.setState(prevState => ({count: prevState.count + 1}))
        }}
    >
        Increase
    </button>

* set store
    import { combineReducers, createStore } from 'redux'

    function shouldShowFormReducer(state = false, action) {
        return state;
    }   

    ...

    const reducer = combineReducers({
        word: wordReducer,
        shouldShowForm: shouldShowFormReducer,
        filterMode: filterModeReducer
    })

    export const store = createStore(reducer); 

* get store
    import { connect } from 'react-redux';

    export const ListWord = connect(state => ({words: state.word}))(ListWordComponent)

* get value Input
    onChange={evt => this.setState({ txtVn: evt.target.value })}    

* axios
    GET: 
    componentDidMount() {
    axios.get(`https://jsonplaceholder.typicode.com/users`)
      .then(res => {
        const persons = res.data;
        this.setState({ persons });
      })
    }

    POST:
    axios.post(`https://jsonplaceholder.typicode.com/users`, { user })
    .then(res => {
        console.log(res);
        console.log(res.data);
    })

